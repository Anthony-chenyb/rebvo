{
  "name": "REBVO",
  "tagline": "Realtime Edge Based Visual Odometry for a Monocular Camera",
  "body": "Tarrio, J. J., & Pedre, S. (2015). Realtime Edge-Based Visual Odometry\r\nfor a Monocular Camera. In Proceedings of the IEEE International Conference\r\non Computer Vision (pp. 702-710).\r\n\r\nREBVO tracks a camera in Realtime using edges. The system is split in 2 components.\r\nAn on-board part (rebvo itself) doing all the processing and sending data over UDP \r\nand an OpenGL visualizer. \r\n\r\nIntroductory video: https://youtu.be/7pn29iGklgI\r\n\r\n### System requirements\r\n\r\nIn ubuntu and most linux dist this libraries can be downloaded directly from the\r\n repos, except for TooN.\r\n\r\n-- C++11\r\n\r\n-- Linux, X11, v4l2\r\n\r\n-- OpenGL development libraries (GL,GLU,glut)\r\n\r\n-- TooN mathematical library (http://www.edwardrosten.com/cvd/toon.html)\r\n\r\n-- Lapack (for advanced TooN functions)\r\n\r\n-- LibAV (Video Codecs)\r\n\r\n-- LibGD (Image managment)\r\n\r\n-- Optionally NE10 for ARM Neon optimizations\r\n\r\n### Compiling\r\n\r\nREBVO has been developed using QT creator, so a project file is provided in each of the\r\ncomponents folder, (rebvo and visualizer). Also two makefiles are provided on each \r\nof the folders, for amd64 and arm architectures. The first can easily be edited for \r\nx86.\r\n\r\n#### Compile using NE10\r\n\r\nThe system can use the NE10 for neon simd support. In order to use it, the\r\ncorrespondent line has to be uncommented in the arm makefile. \r\n\r\n### Configuring the system\r\n\r\nA GlobalConfig text file can be found in each of the folders. This should be tuned to\r\nyour camera and network configuration. All the configuration options has to be present on the files\r\nin order for the system to start. The structure of the file is self explanatory.\r\n\r\n#### Basic configs in rebvo GlobalConfig\r\n\r\nThe things you have to configure in order for the system to work.\r\n\r\n-- CameraDevice: the v4l2 camera device\r\n\r\n-- ZfX,Y: Camera focal length\r\n\r\n-- PPx,y: Camera principal point\r\n\r\n-- ImageWidth,Height: size to use\r\n\r\n-- FPS: Frames per Seconds\r\n\r\n-- VideoNetHost,Port: IP,Port of the host to send data to\r\n\r\n-- SetAffinity flag,CamaraTn: if the flag is set to 1, the system will use the pthread_setaffinity_np() call\r\n\t\tto distribute the threads according to the CamaraT1..3 configuration.\r\n\t\tThis numbers have to point to existing processors or the call wil fail,\r\n\t\tand this setting usually require superuser privileges.\r\n\t\tSetting affinity and distributing the threads can increase speed.\r\n\r\n-- DetectorThresh: This is a fixed threshold to the edge detector only used\r\n\t \t   if autothresh is off (DetectorAutoGain = 0)\r\n\t\t   Is a camera dependent parameter so it should be tunned for\r\n\t\t   best performance. \r\n\r\n-- ReferencePoints: If auto thresh is on (DetectorAutoGain>0), number of KL\r\n\t\t   points to use. Ussual values are 5000 for 320x240 and \r\n\t\t   15000 for 640x480 \r\n\r\n-- DetectorMax,MinThresh: Limits on threshold tunning, to prevent excessive \r\n\t\t   noise on images with no edges. Similar to DetectorThresh,\r\n\t\t   camera dependant parameters.\r\n\r\n\r\n\r\n#### Basic configs in visualizer GlobalConfig\r\n\r\nImageSize, Focal Length and Principal Point should match the config in rebvo.\r\n\r\n### System Usage\r\n\r\nJust run the two programs on the same o network connected computers and move\r\nthe camera trying to maximize translation.\r\n\r\nREBVO component accept the following command line commands:\r\n\r\nq: Quit\r\n\r\nr: System full reset\r\n\r\ns: Saves in SimVideoFile (rebvo GlobalConfig) SimVideoNFrames frames of\r\n   uncompressed video for further replay. It does a direct write to disk,\r\n   so it can loose frames depending on the system. The format is described\r\n   in videocam.h\r\n\r\np: Takes Snapshot of the current image\r\n\r\n\r\nThe visualizer opens 2 kinds of windows, XLib windows (front and top) \r\ndisplays the image and the edge detection, OpenGL windows display \r\nthe edgemap and the image in a 3D fashion.\r\n\r\n#### Commands in the XLib windows\r\n\r\nq: Quit\r\n\r\nb: Clear trajectory\r\n\r\ni: Toggle show image\r\n\r\nt: Show frame to frame matching\r\n\r\nz,x: Increase/Decease maximum depth in top view\r\n\r\n#### Commands in the OpenGL windows\r\n\r\nw,s,a,d: Walk the view like DukeNuke3D\r\narrows: Rotate the view\r\n\r\nf,r: flight\r\n\r\n1..9: Load i view\r\n\r\nShift+1..9: Save i view\r\n\r\nEscape: Reset View\r\n\r\nm: Toggle image rendering\r\n\r\nn: Toggle edgemap rendering\r\n\r\nc: Toggle camera rendering\r\n\r\nt,g: Increase/decrease max distance for color scale\r\n\r\ny,h: Same for min distance \r\n\r\ni: Render edgemap depth uncertainty\r\n\r\nv: Render Trajectory\r\n\r\nb: Clear trajectory\r\n\r\n,: Fix the view to world coordinates\r\n\r\nEnd: Quit\r\n\r\n### Output files\r\n\r\nIf the savelog option is enabled the system outputs 2 files, a .m log file and a\r\ntrajectory file (timestamp tx ty tz qx qy qz qw) that can be used to benchmark\r\nthe algorithm.\r\n\r\n### Camera Drivers\r\n\r\nThree classes are provided for camera managment:\r\n\r\n-- v4lCam is a wrapper to the C functions provided in video_io for interacting with\r\n   the v4l2 lib. \r\n\r\n-- SimCamera is a simple class designed to load uncompresed video from a file. For compressed video\r\n   formats check the Video2SimCam section.\r\n\r\n-- DataSetCam is used to load the images from the TUM datasets used to benchmark the\r\n   paper (add the dataset directory and image file list to the config file).\r\n\r\nAll three classes inherit from VideoCam class, this class is able to generate the \r\nvideo files used by simcam. \r\n\r\nIf you want to use your own camera loader, just write a child overwriting the virtual\r\nfunctions in VideoCam and add it to the first thread of rebvo.\r\n\r\n#### Video2SimCam Utility\r\n\r\nCurrently rebvo canot load compressed video directly (a feature that is gonna be added soon), so\r\na simple utility is provided in the Video2SimCam folder that uses OpenCV VideoCapture to uncompress\r\nthe video in the SimCam format (can take a lot of disk space!).\r\n\r\n### FAQ\r\n\r\n-- Depth is not correct, objects that are close appear far and viceversa\r\n\r\nAt to this point, rebvo relies only on filtering for initialization, this\r\ncan lead to initialization errors since convergence is not warrantied. If\r\nthe system didn't bootup right, just reset.\r\n\r\n-- How is rebvo someway useful if initialization can fail\r\n\r\nIf gyroscope measurements are added to estimation the initialization\r\nproblem disappears. That is the version used to fly quadrotors.\r\nIf you want that version contact the authors.\r\n\r\n-- Why rebvo doesn't use OpenCV?\r\n\r\nOpenCV is great, the system originally used OpenCV for image acquisition \r\nand preprocessing. \r\nThen at some point we figure that it was a waste having to install\r\nthe whole library just for image acquisition, so I write small a wrapper \r\nto the V4L2 library trying to make the system easier to install and \r\nless dependant on third party libraries.\r\n\r\n-- What about that simulation feature?\r\n\r\nIf you use the rebvo 's' command it will save video for further repetition.\r\nYou can visualize that video toggling CameraType to 1 (SimCamera)\r\n\r\n### Contact\r\n\r\nJuan Jose Tarrio\r\n\r\njuan.tarrio@gmail.com\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}